/**
 ********************************************************************************
 *** EditSubcategoryAction.java                                               ***
 *** generated by AnoSiteGenerator (ASG), Version: 1.3.3                      ***
 *** Copyright (C) 2005 - 2010 Anotheria.net, www.anotheria.net               ***
 *** All Rights Reserved.                                                     ***
 ********************************************************************************
 *** Don't edit this code, if you aren't sure                                 ***
 *** that you do exactly know what you are doing!                             ***
 *** It's better to invest time in the generator, as into the generated code. ***
 ********************************************************************************
 */

package net.anotheria.anosite.usersettings.action;



import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import net.anotheria.anosite.gen.shared.action.BaseActionsAction;
import net.anotheria.anosite.gen.usersettings.data.LanguageFilteringSettings;
import net.anotheria.anosite.gen.usersettings.service.UserSettingsServiceException;
import net.anotheria.anosite.usersettings.bean.EditUserSettingsForm;


public class EditUserSettingsAction extends BaseActionsAction{

	
	public static final String PARAM_REFERRER = "referrer"; 
	public static final String FORWARD_REFERRER = "defaultReferrer";
	
	@Override
	public ActionForward anoDocExecute(ActionMapping mapping, ActionForm af,
			HttpServletRequest req, HttpServletResponse res) throws Exception {
		
		String userId = getUserId(req);
		String forward = "success";
		
		
		
		if( userId != null )
		{
			String [] supportedLanguages = getSupportedLanguages().toArray(new String[0]);
			
			EditUserSettingsForm form = new EditUserSettingsForm();
			
			form.setUserId(getUserId(req));
			
			// Set referrerUrl
			String referrerUrl = req.getParameter(PARAM_REFERRER);
			if(referrerUrl == null ) {
				ActionForward defaultActionForward = mapping.findForward(FORWARD_REFERRER);
				if(defaultActionForward != null) {
					referrerUrl = defaultActionForward.getPath();
				}
			}	
			if(referrerUrl==null) {
				referrerUrl = "/";
			}
			log.debug("Set form referrer: " + referrerUrl);
			form.setReferrer(referrerUrl);			
			
			
			// Set current user settings			 
			LanguageFilteringSettings languageFilteringSettings	= getLanguageFilteringSettingsByUserId(userId);
			if(languageFilteringSettings != null) {				
				form.setSupportedLanguages( supportedLanguages );
				form.setLanguageFilteringEnabled(languageFilteringSettings.getLanguageFilteringEnabled());
				form.setDisplayedLanguages( languageFilteringSettings.getDisplayedLanguages().toArray(new String[0]) );
			} else {
				// Set default values if settings wasn't created yet
				form.setSupportedLanguages( supportedLanguages );
				form.setLanguageFilteringEnabled(false);
				form.setDisplayedLanguages( supportedLanguages );
			}	
			
			addBeanToRequest(req, "EditUserSettingsForm" , form);
			
		}
		else {
			forward = "faulure";
		}
		
		
		return mapping.findForward(forward);
	}

	
	
	@Override
	protected String getTitle() {		
		return "Edit User Settings";
	}
	
	

}
